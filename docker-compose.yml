version: '3.8'

services:
  # Backend API service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: payroll-backend
    image: agentic-payroll:latest
    volumes:
      - ./timesheets:/app/timesheets
      - ./salary_slips:/app/salary_slips
      - ./logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - RUN_MODE=api
    ports:
      - "8000:8000"
    restart: unless-stopped
    networks:
      - payroll-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: payroll-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - payroll-network

  # Future: Add PostgreSQL for employee data
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: payroll-db
  #   environment:
  #     POSTGRES_DB: payroll
  #     POSTGRES_USER: payroll_user
  #     POSTGRES_PASSWORD: changeme
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - payroll-network
  #   restart: unless-stopped

  # Future: Add Redis for caching
  # redis:
  #   image: redis:7-alpine
  #   container_name: payroll-cache
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - payroll-network
  #   restart: unless-stopped

networks:
  payroll-network:
    driver: bridge

# volumes:
#   postgres_data:
